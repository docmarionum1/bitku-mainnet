{"version":3,"sources":["config.js","cadence/scripts.js","hooks/useCurrentUser.js","cadence/transactions.js","components/AuthCluster.js","components/Mint.js","components/Haikus.js","App.js","reportWebVitals.js","index.js"],"names":["config","put","process","FEATURED_ADDRESS","LOGO_URL","FLOWSCAN_URL","contract_address","GET_NEXT_ID_AND_PRICE","getNextIDAndPrice","a","fcl","then","response","id","Object","keys","parseInt","price","parseFloat","GET_HAIKUS","getHaikus","haikus","t","key","value","getBalance","user","addr","balance","getUserHaikus","UserStateContext","React","createContext","UserStateProvider","children","useState","setBalance","userHaikus","setUserHaikus","Provider","useCurrentUser","loggedIn","setUser","useContext","useEffect","subscribe","updateBalance","useCallback","showTransactionLink","txId","setError","flowScanLink","text","href","target","severity","MINT_HAIKU_TRANSACTION","mintHaikuTransaction","nextHaiku","onceSealed","SETUP_FUSD_VAULT","setupFUSDVaultTransaction","useStyles","makeStyles","theme","root","display","justifyContent","padding","spacing","button","about","color","AuthCluster","classes","menuAnchor","setMenuAnchor","handleClose","className","Typography","variant","Fragment","Button","onClick","event","currentTarget","Menu","anchorEl","keepMounted","open","onClose","MenuItem","disabled","height","flexDirection","popper","top","zIndex","tooltip","fontSize","maxWidth","link","Mint","setNextHaiku","loading","setLoading","haiku","setHaiku","rampMinPurchaseAmount","setRampMinPurchaseAmount","fetch","json","assets","fusd","filter","asset","symbol","priceEur","minPurchaseAmountEur","fetchFUSDInfo","mintHaiku","window","scrollTo","message","mintingDisabled","tooltipTitle","RampInstantSDK","hostAppName","hostLogoUrl","swapAmount","Math","ceil","max","pow","swapAsset","userAddress","fiatCurrency","show","toFixed","typing","fixed","Tooltip","interactive","title","placement","arrow","marginBottom","paper","borderRadius","skeletonContainer","flexGrow","skeleton","margin","Haikus","heading","order","ids","Grid","container","map","item","xs","sm","md","lg","Paper","elevation","Skeleton","animation","width","createMuiTheme","typography","fontFamily","join","h6","textAlign","textDecoration","fontWeight","h4","body2","whiteSpace","shape","alert","App","error","snackbarOpen","setSnackbarOpen","typingEnd","setTypingEnd","featuredHaikuAddresses","featuredHaikus","setFeaturedHaikus","handleErrorClose","requestedHaikus","push","getText","CssBaseline","ThemeProvider","Container","onTypingEnd","Snackbar","autoHideDuration","Alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1efee1cc.chunk.js","sourcesContent":["import { config } from \"@onflow/fcl\";\n\nconfig()\n  .put(\"accessNode.api\", process.env.REACT_APP_ACCESS_NODE) // Configure FCL's Access Node\n  .put(\"challenge.handshake\", process.env.REACT_APP_WALLET_DISCOVERY) // Configure FCL's Wallet Discovery mechanism\n//.put(\"0xProfile\", process.env.REACT_APP_CONTRACT_PROFILE) // Will let us use `0xProfile` in our Cadence\n\nexport let FEATURED_ADDRESS = \"\";\nexport let LOGO_URL = \"\";\nexport let FLOWSCAN_URL = \"\";\n\n\nif (process.env.REACT_APP_FLOW_NETWORK === \"emulator\") {\n  const contract_address = \"0xf8d6e0586b0a20c7\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xee82856bf20e2aa6\")\n    .put(\"0xTOKENADDRESS\", \"0x0ae53cb6e3f42a79\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", contract_address)\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", contract_address);\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"http://localhost:3000/logo512.png\";\n  FLOWSCAN_URL = \"\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"testnet\") {\n  const contract_address = \"0x824f612f78d34250\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0x9a0766d93b6608b7\")\n    .put(\"0xTOKENADDRESS\", \"0x7e60df042a9c0868\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x631e88ae7f1d7c20\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0xe223d8a629e49c68\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://testnet.bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://testnet.flowscan.org/transaction/\";\n} else if (process.env.REACT_APP_FLOW_NETWORK === \"mainnet\") {\n  const contract_address = \"0xf61e40c19db2a9e2\";\n  config()\n    .put(\"0xFUNGIBLETOKENADDRESS\", \"0xf233dcee88fe0abe\")\n    .put(\"0xTOKENADDRESS\", \"0x1654653399040a61\")\n    .put(\"0xNONFUNGIBLETOKENADDRESS\", \"0x1d7e57aa55817448\")\n    .put(\"0xHAIKUNFTADDRESS\", contract_address)\n    .put(\"0xFUSDADDRESS\", \"0x3c5959b568896393\");\n\n  FEATURED_ADDRESS = contract_address;\n  LOGO_URL = \"https://bitku.art/logo512.png\";\n  FLOWSCAN_URL = \"https://flowscan.org/transaction/\";\n}\n","import * as fcl from \"@onflow/fcl\";\nimport * as t from \"@onflow/types\";\n\nexport const GET_NEXT_ID_AND_PRICE = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\npub fun main(): {UInt64: UFix64} {\n\n    return {HaikuNFT.totalSupply: HaikuNFT.currentPrice()}\n}\n`;\n\nexport async function getNextIDAndPrice() {\n  const response = await fcl\n    .send([\n      fcl.script(GET_NEXT_ID_AND_PRICE)\n    ])\n    .then(fcl.decode);\n\n  const id = Object.keys(response)[0];\n  return {\n    id: parseInt(id),\n    price: parseFloat(response[id])\n  };\n}\n\nexport const GET_HAIKU = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(id: UInt64, address: Address): String {\n  let account = getAccount(address)\n  let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n  let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n\n  return ref.borrowHaiku(id: id).text\n}\n`;\n\n// TODO: this needs to better handle a case where the bitku doesn't exist at that address anymore.\n// This wil require a change to the HaikuNFT contract (HaikuNFT.Collection.borrowNFT) to make it return\n// nil instead of panic\nexport const GET_HAIKUS = `\nimport HaikuNFT from 0xHAIKUNFTADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\npub fun main(haikus: { UInt64: Address }): { UInt64: String } {\n  let response: {UInt64: String} = {}\n  for id in haikus.keys {\n    let address = haikus[id]!\n    let account = getAccount(address)\n    let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n    let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n    response[id] = ref.borrowHaiku(id: id).text\n  }\n\n  return response\n}\n`;\n\nexport async function getHaikus(haikus) {\n  return await fcl\n    .send([\n      fcl.script(GET_HAIKUS),\n      fcl.args([\n        fcl.arg(haikus, t.Dictionary({ key: t.UInt64, value: t.Address }))\n        //fcl.arg(address, t.Address),\n        //fcl.arg(id, t.UInt64),\n      ]),\n    ])\n    .then(fcl.decode);\n}\n\nexport async function getBalance(user) {\n  const balance = await fcl\n    .send([\n      fcl.script`\n      import FungibleToken from 0xFUNGIBLETOKENADDRESS\n      import FUSD from 0xFUSDADDRESS\n      \n      pub fun main(account: Address): UFix64 {\n      \n          let vaultRef = getAccount(account)\n              .getCapability(/public/fusdBalance)\n              .borrow<&FUSD.Vault{FungibleToken.Balance}>()\n              ?? panic(\"Could not borrow Balance reference to the Vault\")\n      \n          return vaultRef.balance\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n\n  return parseFloat(balance);\n}\n\nexport async function getUserHaikus(user) {\n  return await fcl\n    .send([\n      fcl.script`\n      import HaikuNFT from 0xHAIKUNFTADDRESS\n      import NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n      \n      pub fun main(address: Address): {UInt64: String} {\n        let account = getAccount(address)\n        let capability = account.getCapability(HaikuNFT.HaikuCollectionPublicPath)\n        let ref = capability.borrow<&{HaikuNFT.HaikuCollectionPublic, NonFungibleToken.CollectionPublic}>() ?? panic(\"Could not borrow\")\n      \n        let haikus: {UInt64: String} = {}\n      \n        for id in ref.getIDs() {\n          let nft = ref.borrowNFT(id: id)\n          haikus[id] = ref.borrowHaiku(id: id).text\n        }\n      \n        return haikus\n      }\n    `,\n      fcl.args([\n        fcl.arg(user.addr, t.Address), // <-- t.Address this time :)\n      ]),\n    ])\n    .then(fcl.decode);\n}","import React, {useCallback, useEffect, useState, useContext} from \"react\";\nimport * as fcl from \"@onflow/fcl\";\nimport {getBalance, getUserHaikus} from \"../cadence/scripts\";\n\nconst UserStateContext = React.createContext();\n\nexport function UserStateProvider({children}) {\n  const [balance, setBalance] = useState(0);\n  const [userHaikus, setUserHaikus] = useState({});\n\n  return <UserStateContext.Provider value={{balance, setBalance, userHaikus, setUserHaikus}} children={children} />\n}\n\nexport function useCurrentUser() {\n  const [user, setUser] = useState({loggedIn: null});\n  const {balance, setBalance, userHaikus, setUserHaikus} = useContext(UserStateContext);\n\n  useEffect(() => fcl.currentUser().subscribe(setUser), []);\n\n  const updateBalance = useCallback(async () => {\n    try {\n      const balance = await getBalance(user);\n      setBalance(balance);\n    } catch {\n      setBalance(null);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user.loggedIn)  {\n      updateBalance();\n    } else {\n      setBalance(0);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    async function getHaikus() {\n      try {\n        const haikus = await getUserHaikus(user);\n        setUserHaikus(haikus);\n      } catch {}\n    }\n\n    if (user.loggedIn) {\n      getHaikus();\n    } else {\n      setUserHaikus({});\n    }\n  }, [user]);\n  \n  return {user, balance, updateBalance, userHaikus, setUserHaikus};\n}\n\nexport default useCurrentUser;","import * as fcl from \"@onflow/fcl\"\nimport * as t from \"@onflow/types\";\nimport { FLOWSCAN_URL } from \"../config\";\n\nfunction showTransactionLink(txId, setError) {\n  const flowScanLink = FLOWSCAN_URL + txId;\n  setError({\n    text: <span> Transaction Submitted. View Status on&nbsp;\n      <a href={flowScanLink} target=\"_blank\">Flowscan</a>\n      .\n    </span>,\n    severity: \"success\"\n  });\n}\n\nexport const MINT_HAIKU_TRANSACTION = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FlowToken from 0xTOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\nimport NonFungibleToken from 0xNONFUNGIBLETOKENADDRESS\n\nimport HaikuNFT from 0xHAIKUNFTADDRESS\n\ntransaction (haikuID: UInt64, price: UFix64) {\n    let collection: &NonFungibleToken.Collection\n    let sentVault: @FungibleToken.Vault\n    let receiverRef: &FlowToken.Vault{FungibleToken.Receiver}\n    \n    prepare(signer: AuthAccount) {\n        // if the account doesn't already have a collection\n        if signer.borrow<&HaikuNFT.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) == nil {\n\n\n            // create a new empty collection\n            let collection <- HaikuNFT.createEmptyCollection()\n            \n            // save it to the account\n            signer.save(<-collection, to: HaikuNFT.HaikuCollectionStoragePath)\n\n            // create a public capability for the collection\n            signer.link<&{NonFungibleToken.CollectionPublic, HaikuNFT.HaikuCollectionPublic}>(HaikuNFT.HaikuCollectionPublicPath, target: HaikuNFT.HaikuCollectionStoragePath)\n        }\n\n        self.collection = signer.borrow<&NonFungibleToken.Collection>(from: HaikuNFT.HaikuCollectionStoragePath) \n             ?? panic(\"Could not borrow reference to NFT Collection!\")\n\n        // Get a reference to the signer's stored vault\n        let vaultRef = signer.borrow<&FUSD.Vault>(from: /storage/fusdVault)\n          ?? panic(\"Could not borrow reference to the owner's FUSD Vault!\")\n\n        // Get a reference to the signer's FLOW receiver to receive FLOW necessary to ensure they have\n        // enough storage\n        self.receiverRef =  signer\n          .getCapability(/public/flowTokenReceiver)\n          .borrow<&FlowToken.Vault{FungibleToken.Receiver}>()\n        ?? panic(\"Could not borrow receiver reference to the recipient's Vault\")\n\n        // Withdraw tokens from the signer's stored vault\n        self.sentVault <- vaultRef.withdraw(amount: price)\n    }\n\n    execute {\n        HaikuNFT.mintHaiku(recipient: self.collection, vault: <- self.sentVault, id: haikuID, flowReceiverRef: self.receiverRef)\n    }\n}\n`;\n\nexport async function mintHaikuTransaction(nextHaiku, setError) {\n  const txId = await fcl.send([\n    fcl.transaction(MINT_HAIKU_TRANSACTION),\n    fcl.args([\n      fcl.arg(nextHaiku.id, t.UInt64),\n      fcl.arg(nextHaiku.price, t.UFix64),\n    ]),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(9999), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n\n// Copied from https://docs.onflow.org/fusd/transactions/\nexport const SETUP_FUSD_VAULT = `\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport FUSD from 0xFUSDADDRESS\n\ntransaction {\n\n  prepare(signer: AuthAccount) {\n\n    // It's OK if the account already has a Vault, but we don't want to replace it\n    if(signer.borrow<&FUSD.Vault>(from: /storage/fusdVault) != nil) {\n      return\n    }\n    \n    // Create a new FUSD Vault and put it in storage\n    signer.save(<-FUSD.createEmptyVault(), to: /storage/fusdVault)\n\n    // Create a public capability to the Vault that only exposes\n    // the deposit function through the Receiver interface\n    signer.link<&FUSD.Vault{FungibleToken.Receiver}>(\n      /public/fusdReceiver,\n      target: /storage/fusdVault\n    )\n\n    // Create a public capability to the Vault that only exposes\n    // the balance field through the Balance interface\n    signer.link<&FUSD.Vault{FungibleToken.Balance}>(\n      /public/fusdBalance,\n      target: /storage/fusdVault\n    )\n  }\n}\n`;\n\nexport async function setupFUSDVaultTransaction(setError) {\n  const txId = await fcl.send([\n    fcl.transaction(SETUP_FUSD_VAULT),\n    fcl.payer(fcl.authz), // current user is responsible for paying for the transaction\n    fcl.proposer(fcl.authz), // current user acting as the nonce\n    fcl.authorizations([fcl.authz]), // current user will be first AuthAccount\n    fcl.limit(99), // set the compute limit\n  ])\n    .then(fcl.decode);\n\n  showTransactionLink(txId, setError);\n\n  return fcl.tx(txId).onceSealed();\n}\n","// File: ./src/auth-cluster.js\n\nimport React, { useState } from \"react\"\nimport * as fcl from \"@onflow/fcl\"\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nimport useCurrentUser from \"../hooks/useCurrentUser\";\nimport { setupFUSDVaultTransaction } from \"../cadence/transactions\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    // position: \"absolute\",\n    // top: theme.spacing(1),\n    // right: theme.spacing(1)\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: theme.spacing(1)\n  },\n  button: {\n\n  },\n  about: {\n    color: \"black\"\n  }\n}))\n\nexport function AuthCluster({ setError }) {\n  const classes = useStyles();\n  const { user, balance, updateBalance } = useCurrentUser();\n  const [menuAnchor, setMenuAnchor] = useState(null);\n\n  const handleClose = () => {\n    setMenuAnchor(null);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h5\"><a href=\"https://github.com/docmarionum1/bitku#readme\" target=\"_blank\" className={classes.about}>About</a></Typography>\n      {user.loggedIn ?\n        <React.Fragment>\n          <div>\n            <Button variant=\"outlined\" onClick={(event) => { setMenuAnchor(event.currentTarget) }}>{user.addr}</Button>\n          </div>\n          <Menu\n            anchorEl={menuAnchor}\n            keepMounted\n            open={!!menuAnchor}\n            onClose={handleClose}\n          >\n            {balance === null ?\n              <MenuItem onClick={async () => {\n                handleClose();\n                await setupFUSDVaultTransaction(setError);\n                updateBalance();\n              }}>Enable FUSD on this wallet</MenuItem> :\n              <MenuItem disabled>{balance} FUSD</MenuItem>\n            }\n            <MenuItem onClick={() => {\n              handleClose();\n              fcl.unauthenticate();\n            }}>Log Out</MenuItem>\n          </Menu>\n        </React.Fragment> :\n        <div>\n          <Button variant=\"outlined\" onClick={fcl.logIn}>Connect Wallet</Button>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default AuthCluster;","import React, { useState, useEffect, useCallback } from \"react\"\n\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TypeWriter from 'react-typewriter';\n\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\n\nimport { LOGO_URL } from \"../config\";\nimport { getHaikus, getNextIDAndPrice } from \"../cadence/scripts\";\nimport { mintHaikuTransaction } from \"../cadence/transactions\";\nimport useCurrentUser from \"../hooks/useCurrentUser\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: \"20rem\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  popper: {\n    top: '10px !important',\n    zIndex: 100\n  },\n  tooltip: {\n    fontSize: '1rem',\n    maxWidth: 'none',\n  },\n  link: {\n    color: 'inherit'\n  }\n}));\n\nexport function Mint({ setError }) {\n  const classes = useStyles();\n\n  const [nextHaiku, setNextHaiku] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [haiku, setHaiku] = useState(null);\n  const { user, balance, updateBalance, setUserHaikus } = useCurrentUser();\n  const [rampMinPurchaseAmount, setRampMinPurchaseAmount] = useState(null);\n\n  useEffect(() => {\n    async function fetchFUSDInfo() {\n      const response = await fetch(\"https://api-instant.ramp.network/api/host-api/assets\");\n      const assets = await response.json();\n      const fusd = assets.assets.filter(asset => asset.symbol == \"FLOW_FUSD\")[0];\n\n      setRampMinPurchaseAmount(fusd.priceEur * fusd.minPurchaseAmountEur);\n    }\n\n    fetchFUSDInfo();\n  }, []);\n\n  useEffect(() => {\n    async function fetch() {\n      setLoading(true);\n      setNextHaiku(await getNextIDAndPrice());\n      setLoading(false);\n    }\n\n    if (nextHaiku === null) {\n      fetch();\n    }\n  }, [nextHaiku]);\n\n  useEffect(() => {\n    if (!user.loggedIn) {\n      setHaiku(null);\n    }\n  }, [user]);\n\n  const mintHaiku = useCallback(async () => {\n    setLoading(true);\n    try {\n      // Mint the new haiku and get the text\n      await mintHaikuTransaction(nextHaiku, setError);\n\n      window.scrollTo(0, 0);\n      const response = await getHaikus({ key: nextHaiku.id, value: user.addr });\n      const text = response[Object.keys(response)[0]];\n\n      // Update the newly minted haiku component\n      setHaiku({\n        id: nextHaiku.id,\n        text: text,\n      });\n\n      // Add it to the user's list of haiku\n      setUserHaikus((haikus) => {\n        return { ...haikus, [nextHaiku.id]: text };\n      });\n\n      setNextHaiku(null);\n      updateBalance();\n      setError(null);\n    } catch (e) {\n      if (e.message !== \"Declined: Externally Halted\" && e.message !== \"Declined: User rejected signature\") {\n        setError({ text: e.message, severity: \"error\" });\n      }\n      setNextHaiku(null);\n    }\n  }, [user, nextHaiku]);\n\n  if (loading) {\n    return (\n      <div className=\"spinner\" id=\"spinner\">\n        <div className=\"double-bounce1\"></div>\n        <div className=\"double-bounce2\"></div>\n      </div>\n    );\n  }\n\n  const mintingDisabled = !user.loggedIn || nextHaiku === null || balance === null || balance < nextHaiku.price;\n  let tooltipTitle = `Mint Bitku #${nextHaiku.id} for ${nextHaiku.price} FUSD`;\n\n  if (!user.loggedIn) {\n    tooltipTitle = \"To mint a Bitku, please connect your wallet using the menu in the top right\";\n  } else if (balance === null) {\n    tooltipTitle = \"To mint a Bitku, please enable FUSD for your wallet using the menu in the top right\";\n  } else if (balance < nextHaiku.price) {\n    tooltipTitle = <span>\n      You don't have enough FUSD.&nbsp;\n      {rampMinPurchaseAmount &&\n        <React.Fragment>\n          <a href=\"#\" className={classes.link} onClick={() => {\n            new RampInstantSDK({\n              hostAppName: 'Bitku',\n              hostLogoUrl: LOGO_URL,\n              swapAmount: Math.ceil(Math.max(nextHaiku.price - balance, rampMinPurchaseAmount) * Math.pow(10, 8)),\n              swapAsset: \"FLOW_FUSD\",\n              userAddress: user.addr,\n              fiatCurrency: \"EUR\"\n            }).show();\n          }}>\n            Buy {Math.max(nextHaiku.price - balance, rampMinPurchaseAmount).toFixed(2)} FUSD\n          </a>.\n        </React.Fragment>\n      }\n    </span>;\n  } else if (nextHaiku === null) {\n    tooltipTitle = \"No Bitkus remaining\";\n  }\n\n  return (\n    <div className={classes.root}>\n      {haiku &&\n        <div>\n          <Typography variant=\"h6\">{haiku.id}</Typography>\n          <Typography variant=\"body2\"><TypeWriter typing={1} fixed={true}>{haiku.text}</TypeWriter></Typography>\n        </div>\n      }\n      <div>\n        <Tooltip interactive classes={{ popper: classes.popper, tooltip: classes.tooltip }} title={tooltipTitle} open={mintingDisabled} placement=\"bottom\" arrow>\n          <span>\n            <Button variant=\"outlined\" disabled={mintingDisabled} onClick={mintHaiku}>\n              Mint Bitku #{nextHaiku.id}/1024 ({nextHaiku.price} FUSD)\n            </Button>\n          </span>\n        </Tooltip>\n      </div>\n    </div>\n  );\n}\n\nexport default Mint;","import React, {useState, useEffect} from \"react\"\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginBottom: theme.spacing(4)\n  },\n  paper: {\n    //width: \"fit-content\",\n    padding: theme.spacing(2),\n    borderRadius: theme.spacing(.5),\n    height: '12em',\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  skeletonContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexGrow: 1,\n    justifyContent: \"center\"\n  },\n  skeleton: {\n    margin: \"auto\"\n  }\n}));\n\nexport function Haikus ({haikus, heading, order}) {\n  const classes = useStyles();\n\n  const ids = order ? order : Object.keys(haikus);\n\n  return (\n    <div className={classes.root}>\n      <Typography variant=\"h4\">{heading}</Typography>\n      <Grid container spacing={3}>\n        {haikus && ids.map((id) => (\n          <Grid item xs={12} sm={6} md={6} lg={4} key={id}>\n            <Paper elevation={3} className={classes.paper}>\n              <Typography variant=\"h6\">{id}</Typography>\n              {\n                haikus[id] ? \n                <Typography variant=\"body2\">{haikus[id]}</Typography> :\n                <div className={classes.skeletonContainer}>\n                  <div>\n\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"40%\" className={classes.skeleton}/>\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"56%\" className={classes.skeleton}/>\n                    <Skeleton variant=\"text\" animation=\"wave\" width=\"40%\" className={classes.skeleton}/>\n                  </div>\n                </div>\n              }\n            </Paper>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Haikus;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { Typography } from \"@material-ui/core\";\nimport Container from '@material-ui/core/Container';\nimport TypeWriter from 'react-typewriter';\n\n\n\nimport { useCurrentUser } from \"./hooks/useCurrentUser\";\nimport AuthCluster from \"./components/AuthCluster\";\nimport Mint from './components/Mint';\nimport Haikus from './components/Haikus';\nimport { getHaikus } from './cadence/scripts';\nimport { FEATURED_ADDRESS } from \"./config\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '\"Courier New\"',\n      'courier',\n      'monospace'\n    ].join(','),\n    h6: {\n      textAlign: \"center\",\n      textDecoration: \"underline\",\n      fontSize: \"1rem\",\n      fontWeight: \"bold\"\n    },\n    h4: {\n      marginBottom: \"1rem\",\n      textDecoration: \"underline\"\n    },\n    body2: {\n      textAlign: \"center\",\n      whiteSpace: \"pre\",\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n    }\n  },\n  shape: {\n    borderRadius: 32\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    textAlign: \"center\"\n  },\n  alert: {\n    flexDirection: \"row\"\n  }\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const [error, setError] = useState(null);\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [typingEnd, setTypingEnd] = useState(false);\n  const { userHaikus } = useCurrentUser();\n  const featuredHaikuAddresses = [\n    { key: 189, value: \"0x002c479c5c9eb30f\" }, // papavader's\n    { key: 40, value: FEATURED_ADDRESS },\n    { key: 29, value: FEATURED_ADDRESS },\n    { key: 199, value: \"0xcd642845e5f48fdd\" }, // xu's\n    { key: 0, value: FEATURED_ADDRESS },\n    { key: 4, value: FEATURED_ADDRESS },\n    { key: 5, value: FEATURED_ADDRESS },\n    { key: 28, value: FEATURED_ADDRESS },\n    { key: 41, value: FEATURED_ADDRESS },\n  ]\n  const featuredOrder = [189, 40, 29, 199, 0, 4, 5, 28, 41];\n  const [featuredHaikus, setFeaturedHaikus] = useState({});\n\n  const handleErrorClose = () => setSnackbarOpen(false);\n\n  useEffect(() => {\n    if (error !== null) {\n      setSnackbarOpen(true);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    async function getText() {\n      const requestedHaikus = [];\n      for (const haiku of featuredHaikuAddresses) {\n        requestedHaikus.push(haiku);\n      }\n      setFeaturedHaikus(await getHaikus(requestedHaikus));\n    }\n\n    getText();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <ThemeProvider theme={theme}>\n        <div className={classes.root}>\n          <AuthCluster setError={setError} />\n          <Container>\n            <Typography variant=\"h1\">\n              <TypeWriter\n                typing={1}\n                onTypingEnd={() => setTypingEnd(true)}\n              >\n                Bitku\n              </TypeWriter>\n            </Typography>\n            {typingEnd &&\n              <React.Fragment>\n                <Mint setError={setError} />\n                <Haikus haikus={featuredHaikus} order={featuredOrder} heading=\"Featured\" />\n                <Haikus haikus={userHaikus} heading=\"My Bitku\" />\n              </React.Fragment>\n            }\n            {error &&\n              <Snackbar open={snackbarOpen} autoHideDuration={10000} onClose={handleErrorClose}>\n                <Alert onClose={handleErrorClose} severity={error.severity} className={classes.alert}>\n                  {error.text}\n                </Alert>\n              </Snackbar>\n            }\n          </Container>\n        </div>\n      </ThemeProvider>\n    </React.Fragment >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./config\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {UserStateProvider} from \"./hooks/useCurrentUser\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserStateProvider>\n      <App />\n    </UserStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}